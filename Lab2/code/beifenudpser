

#include "net.h"

int main() {

    /* 建立套接字 */
    int sockfd = Socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);

    int enable = 1;
    Setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &enable, sizeof(int));

    /* 绑定端口 */
    struct sockaddr_in server_addr = {0};
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = inet_addr(UDP_SERVER_ADDRESS);
    server_addr.sin_port = htons(UDP_SERVER_PORT);

    Bind(sockfd, (struct sockaddr *)&server_addr, sizeof(struct sockaddr));


    // Listen(sockfd, CONNECTION_NUMBER);

    /* 建立tcp连接 */
    struct sockaddr_in client_addr;
    unsigned int client_addr_len = sizeof(struct sockaddr_in);
    // for(int i=1;i<=10;i++){
    int client_sockfd = Accept(sockfd, (struct sockaddr *)&client_addr, &client_addr_len);
    // printf("SC:%d",client_sockfd);
    printf("Accept client %s:%d\n", inet_ntoa(client_addr.sin_addr), ntohs(client_addr.sin_port));
  

    /* 接收数据 */
    /*struct sockaddr_in client_addr;
    int client_addr_len = sizeof(client_addr);*/

    char buf[UDP_BUF_LENGTH];
    
    size_t pkt_len = Recvfrom(sockfd, buf, UDP_BUF_LENGTH, 0, (struct sockaddr *)&client_addr, &client_addr_len);

    // sendto(sockfd, buf, strlen(buf), 0, (struct sockaddr *)&client_addr, sizeof(client_addr));

    /* 关闭套接字 */
    close(sockfd);
    // }
    return 0;
}




#include "net.h"

int main() {

    /* 建立套接字 */
    int sockfd = Socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);

    /* 发送数据 */
    struct sockaddr_in server_addr = {0};
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = inet_addr(UDP_SERVER_ADDRESS);
    server_addr.sin_port = htons(UDP_SERVER_PORT);

    
    char buf[UDP_BUF_LENGTH];
    // scanf("%s", buf);
    char *msg = "hello";
    // printf("ABABA: %s \n", buf);
    printf("Send message: %s[%zu bytes]\n", buf, strlen(buf));
    // for(int i=1;i<=10;i++){
    Connect(sockfd, (struct sockaddr *)&server_addr, sizeof(struct sockaddr));
    Sendto(sockfd, buf, strlen(buf), 0, (struct sockaddr *)&server_addr, sizeof(server_addr));
    // Send(sockfd, msg, strlen(msg), 0);
    
    int sever_addr_len = sizeof(server_addr);

    // size_t rmsg = Recvfrom(sockfd, msg, UDP_BUF_LENGTH, 0,(struct sockaddr *)&server_addr, &sever_addr_len);
    // msg[rmsg] = '\0';
    // printf("FINAL: %s \n", msg);

    /* 关闭套接字 */
    close(sockfd);
    // }
    return 0;
}
